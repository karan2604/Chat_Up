/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package main;

import function.ClientHandler;
import function.Method;
import java.awt.Color;
import java.io.File;
import java.io.IOException;
import java.net.ServerSocket;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author asus
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnstopserver = new javax.swing.JButton();
        btnstartserver = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt = new javax.swing.JTextArea();
        lbstatus = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnstopserver.setBackground(new java.awt.Color(255, 102, 102));
        btnstopserver.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        btnstopserver.setText("Stop Server");
        btnstopserver.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnstopserver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnstopserverActionPerformed(evt);
            }
        });

        btnstartserver.setBackground(new java.awt.Color(102, 255, 102));
        btnstartserver.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        btnstartserver.setText("Start Server");
        btnstartserver.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnstartserver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnstartserverActionPerformed(evt);
            }
        });

        txt.setEditable(false);
        txt.setColumns(20);
        txt.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt.setForeground(new java.awt.Color(0, 0, 0));
        txt.setRows(5);
        jScrollPane1.setViewportView(txt);

        lbstatus.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        lbstatus.setForeground(new java.awt.Color(255, 102, 102));
        lbstatus.setText("Server is Stop");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnstartserver, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnstopserver, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lbstatus, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 384, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnstopserver, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnstartserver, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbstatus, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private ServerSocket server;
    private Thread run;
    private void startserver()
    {
        Method.setClientslist(new ArrayList<>());
        File f = new File("data");
        
           for (File fs : f.listFiles()) {
                fs.delete();
            }
        
       
        
        run=new Thread(new Runnable() {

            @Override
            public void run() {
                try {
                    server=new ServerSocket(9876);
                    lbstatus.setForeground(Color.GREEN);
                    Method.setTxt(txt);
                    txt.setText("Server is starting...\n");
                    while(true)
                    {
                        new ClientHandler(server.accept());
                    }
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(Main.this, ex, "Error", JOptionPane.ERROR_MESSAGE);
                }
                
            }
        });
        run.start();
    }
    
    private void btnstartserverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnstartserverActionPerformed
        // TODO add your handling code here:
        try{
            startserver();
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, ex, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnstartserverActionPerformed

    private void stopserver() throws IOException{
        
        int c = JOptionPane.showConfirmDialog(this, "Are you sure to stop server now", "Stop Server", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (c == JOptionPane.YES_OPTION) {
            lbstatus.setForeground(new Color(255, 51, 51));
            txt.setText("Server now Stoped ...");
            run.interrupt();
            server.close();
        }
        
    }
    
    private void btnstopserverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnstopserverActionPerformed
        // TODO add your handling code here:
         try {
            stopserver();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnstopserverActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnstartserver;
    private javax.swing.JButton btnstopserver;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbstatus;
    private javax.swing.JTextArea txt;
    // End of variables declaration//GEN-END:variables
}
